<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pro Players</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous" />

        <script src="https://kit.fontawesome.com/1694914d74.js" crossorigin="anonymous"></script>
</head>
<style>
    .icon-hover-primary:hover {
  border-color: #3b71ca !important;
  background-color: white !important;
}

.icon-hover-primary:hover i {
  color: #3b71ca !important;
}
.icon-hover-danger:hover {
  border-color: #dc4c64 !important;
  background-color: white !important;
}

.icon-hover-danger:hover i {
  color: #dc4c64 !important;
}
</style>
<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-white fixed-top navbar-light p-3 shadow-sm">
            <div class="container">
                <a class="navbar-brand" href="/home/<%=userId%>"><i class="fa-solid fa-shop me-2"></i> <strong>Pro Players</strong></a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>   
                    <ul class="navbar-nav ms-auto">
                      <li class="nav-item dropdown">
                        <a class="nav-link mx-2 dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                          <i></i> Categories
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                          <% categories.forEach(category => { %>
                            <a class="dropdown-item" href="/products/<%=category.categoryName%>"><%= category.categoryName %></a>
                          <% }); %>
                        </div>
                      </li>
                        <li class="nav-item">
                            <a class="nav-link mx-2 text-uppercase" href="#"><i class="fa-solid fa-heart me-1"></i>
                                Whishlist</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link mx-2 text-uppercase" href="/cart"><i
                                    class="fa-solid fa-cart-shopping me-1"></i> Cart</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link mx-2 dropdown-toggle" href="#" id="navbarDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-user"></i> Account
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <a class="dropdown-item" href="/user-profile/<%=userId%>">My Profile</a>
                                <a class="dropdown-item" href="/orders">Orders</a>
                                <div class="dropdown-divider"></div>
                                <form action="/home/logout" method="post">
                                    <button type="submit" class="dropdown-item">
                                        <a class="dropdown-item">Logout</a>
                                    </button>
                                </form>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>  
      <!-- cart + summary -->
      <section class="bg-light " style="margin-top: 70px;">
        <div class="container">
          <div class="row">
            <!-- cart -->       
            <div class="col-lg-9">
              <div class="card border shadow-0">
                <div class="m-4">
                  <h4 class="card-title mb-4">Your shopping cart</h4>
                  <% if (isEmptyCart) { %>
                    <p>No items in the cart.</p>
                <% } else { %> 
                  <% items.forEach(item=>{%>  
                  <div class="row gy-3 mb-4">
                    <div class="col-lg-5">
                      <div class="me-lg-5">
                        <div class="d-flex">
                          <img src="homeimgs/<%= item.productId.image[0] %>" class="border rounded me-3" style="width: 96px; height: 116px;" />
                          <div class="">
                            <a href="/product-page/<%=item.productId._id%>" class="nav-link"><%=item.productId.productName%></a>
                            <p class="text-muted"><%=item.productId.productCategory.categoryName%></p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="col-lg-2 col-sm-6 col-6 d-flex flex-row flex-lg-column flex-xl-row text-nowrap">
                      <div class="">
                        <div class="input-group mb-3 product-quantity" style="width: 125px; padding-right: 20px;">
                          
                          
                            <button class="btn btn-white border border-secondary px-1 minusButton" type="button" data-mdb-ripple-color="dark" <%= item.quantity === 1 ? 'disabled' : ''%>>
                              <i class="fas fa-minus"></i>
                            </button>
                            <input type="text" name="quantityValue" class="form-control text-center border border-secondary quantityInput" style="width: 50px;" value="<%=item.quantity%>" data-product-id="<%=item.productId._id%>" data-total-quantity="<%= item.productId.totalQuantity %>" />
                            <button class="btn btn-white border border-secondary px-1 plusButton" type="button" data-mdb-ripple-color="dark" <%= item.quantity === item.productId.totalQuantity ? 'disabled' : ''%>>
                              <i class="fas fa-plus"></i>
                            </button>
                          
                      </div>
                      
                      </div>
                      <div class="">
                        <% if (item.productId.totalQuantity > 0) { %>
                        <text class="h6 total-price" data-product-id="<%= item.productId._id %>" data-price="<%= item.productId.price %>">₹<%= item.productId.price * item.quantity %></text> <br />
                        <small class="text-muted text-nowrap">₹<%=item.productId.price%> / per item </small>
                        <% } else { %>
                          <span class="text-danger">Out of Stock</span>
                        <% } %>
                      </div>
                    </div>
                    <div class="col-lg col-sm-6 d-flex justify-content-sm-center justify-content-md-start justify-content-lg-center justify-content-xl-end mb-2">
                      <div class="float-md-end">
                        <a href="#!" class="btn btn-light border px-2 icon-hover-primary"><i class="fas fa-heart fa-lg px-1 text-secondary"></i></a>
                        <form action="/cart-item-remove/<%=item.productId._id%>" class="btn" method="post">
                        <button type="submit" class="btn btn-light border text-danger icon-hover-danger">
                          Remove
                        </button>
                      </form>
                        
                      </div>
                    </div>
                  </div>     
                  <% }); %>
                </div>
      
                
              </div>
            </div>
            <!-- cart -->
            <!-- summary -->
            <div class="col-lg-3">
              <div class="card mb-3 border shadow-0">
                <div class="card-body">
                  <form>
                    <div class="card shadow-0 border">
                        <div class="card-body">
                          <div class="d-flex justify-content-between">
                            
                          </div>
                          
                          <hr />
                          <div class="d-flex justify-content-between">
                            <p class="mb-2">Cart Summary:</p>
                            <p id="cart-summary" class="cart-summary mb-2 fw-bold">₹<%=totalPrice%></p>
                          </div>
                          
              
                          <div class="mt-3">
                            <a href="/checkOut" class="btn btn-success w-100 shadow-0 mb-2"> Make Purchase </a>
                            <a href="#" class="btn btn-light w-100 border mt-2"> Back to shop </a>
                          </div>
                          <% } %>
                        </div>
                      </div>
                    </div>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
              
            <!-- summary -->
          </div>
        </div>
      </section>
      <!-- cart + summary -->
     
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"></script>
        <!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
 document.addEventListener('DOMContentLoaded', function () {
    const productQuantityElements = document.querySelectorAll('.product-quantity');
    const cartSummaryElement = document.querySelector('.cart-summary');

    productQuantityElements.forEach(productQuantityElement => {
        const minusButton = productQuantityElement.querySelector('.minusButton');
        const plusButton = productQuantityElement.querySelector('.plusButton');
        const quantityInput = productQuantityElement.querySelector('.quantityInput');

        const totalPriceElement = document.querySelector(`.total-price[data-product-id="${quantityInput.dataset.productId}"]`);

        minusButton.addEventListener('click', function () {
            if (quantityInput.value > 1) {
                quantityInput.value--;
                // Trigger input event after decrementing
                quantityInput.dispatchEvent(new Event('input'));
            }
        });

        plusButton.addEventListener('click', function () {
            quantityInput.value++;
            // Trigger input event after incrementing
            quantityInput.dispatchEvent(new Event('input'));
        });

        // Add input event listener to validate input as a number
        quantityInput.addEventListener('input', function () {
            // Remove non-numeric characters
            quantityInput.value = quantityInput.value.replace(/[^0-9]/g, '');
            const totalQuantity = parseInt(quantityInput.dataset.totalQuantity, 10);
            let enteredQuantity = parseInt(quantityInput.value, 10);

            // Check if entered quantity is greater than total quantity
            if (isNaN(enteredQuantity) || enteredQuantity > totalQuantity) {
                // Reset to 1
                enteredQuantity = 1;
            }

            // Update input value
            quantityInput.value = enteredQuantity;

            // Update buttons based on new quantity
            updateButtons(quantityInput, enteredQuantity);


            // Ensure the value is at least 1
            if (quantityInput.value < 1 || isNaN(quantityInput.value)) {
                quantityInput.value = 1;
            }
            

            // Trigger change event after updating the value
            quantityInput.dispatchEvent(new Event('change'));
            const productPrice = parseFloat(totalPriceElement.dataset.price);
            const newTotalPrice = productPrice * quantityInput.value;
            totalPriceElement.textContent = `₹${newTotalPrice}`;
        });

        // Add input event listener for AJAX update
        quantityInput.addEventListener('change', async function () {
            const productId = quantityInput.dataset.productId;
            const newQuantity = parseInt(quantityInput.value, 10);

            // Send an asynchronous request to update the quantity
            try {
                const response = await fetch(`/cart-update-quantity/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: newQuantity }),
                });

                if (response.ok) {
                    console.log('Quantity updated successfully');
                    updateCartSummary();
                    updateButtons(quantityInput, newQuantity);
                } else {
                    console.error('Failed to update quantity');
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
            }
        });
    });
    function updateCartSummary() {
    // Calculate total price based on the updated quantities of in-stock items
    const totalPriceElements = document.querySelectorAll('.total-price');
    let totalCartPrice = 0;

    totalPriceElements.forEach(totalPriceElement => {
        const productPrice = parseFloat(totalPriceElement.dataset.price);
        const quantityInput = document.querySelector(`.quantityInput[data-product-id="${totalPriceElement.dataset.productId}"]`);
        const totalQuantity = parseInt(quantityInput.dataset.totalQuantity, 10);
        const newTotalPrice = productPrice * parseInt(quantityInput.value, 10);

        // Check if the item is in stock before adding its price to the total
        if (quantityInput.value > 0 && totalQuantity > 0) {
            totalCartPrice += newTotalPrice;
        }
    });

    // Update the cart summary element
    const cartSummaryElement = document.querySelector('.cart-summary');
    if (cartSummaryElement) {
        cartSummaryElement.textContent = `₹${totalCartPrice.toFixed(2)}`;
    }
}


    function updateButtons(quantityInput, newQuantity) {
        const minusButton = quantityInput.previousElementSibling;
        const plusButton = quantityInput.nextElementSibling;

        // Disable minus button if new quantity is 1
        minusButton.disabled = newQuantity === 1;

        // Disable plus button if new quantity is equal to total quantity
        const totalQuantity = parseInt(quantityInput.dataset.totalQuantity, 10);
        plusButton.disabled = newQuantity === totalQuantity;
    }
});

</script>

</body>
</html>