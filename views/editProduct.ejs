<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
 <!-- Bootstrap Core CSS -->
 <link href="/css/vendors/bootstrap.min.css" rel="stylesheet">

 <!-- MetisMenu CSS -->
 <link href="/css/vendors/metisMenu.min.css" rel="stylesheet">

 <!-- DataTables CSS -->
 <link href="/css/vendors/dataTables/dataTables.bootstrap.css" rel="stylesheet">

 <!-- DataTables Responsive CSS -->
 <link href="/css/vendors/dataTables/dataTables.responsive.css" rel="stylesheet">

 <!-- Custom CSS -->
 <link href="/css/vendors/startmin.css" rel="stylesheet">

 <!-- Custom Fonts -->
 <link href="/css/vendors/font-awesome.min.css" rel="stylesheet" type="text/css">

 <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.css">
 
</head>
<style>
 .table-description {
   max-width: 100px;
  
 }
</style>
<script src="https://unpkg.com/cropperjs"></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Initialize Cropper.js on the image with id "imagePreview"
    var image = document.getElementById('imagePreview');
    
    // Set a fixed size for the Cropper container (adjust as needed)
    var cropperContainer = document.getElementById('cropperContainer');
    var cropper = new Cropper(image, {
      aspectRatio: 0, // You can set the aspect ratio as needed
      viewMode: 2, // You can set the view mode as needed
      dragMode: 'move', // You can set the drag mode as needed
      // ... Other Cropper options
    });

    // Event listener for the file input change
    document.getElementById('image_uploader').addEventListener('change', function () {
      // Set the source of the Cropper to the selected image file
      var input = this;
      var reader = new FileReader();
      reader.onload = function (e) {
        // Update the Cropper's image source
        cropper.replace(e.target.result);
      };
      reader.readAsDataURL(input.files[0]);

      // Log to console for debugging
      console.log('File selected, Cropper updated.');
    });

    // Event listener for the "Crop Image" button
    document.getElementById('cropButton').addEventListener('click', function () {
      // Get the cropped data as a base64-encoded string
      var croppedData = cropper.getCroppedCanvas().toDataURL();

      // Set the value of the hidden input for cropped image
      document.getElementById('croppedImageData').value = croppedData;

      // Display a success message or perform any other actions as needed
      console.log('Image cropped successfully!');
    });
  });
</script>
<body>
    <form class="form-horizontal mx-auto" style="margin-top: 60px; margin-left: 50px;" method="post" action="/product-management/edit/<%=productId%>" onsubmit="return validateForm()" enctype="multipart/form-data">
        <fieldset>
    
          <!-- Form Name -->
          <center>
            <legend>Product Management</legend>
          </center>
    
          <div class="row">
            <div class="col-md-6 col-md-offset-3">
              <div class="alert alert-info text-center" id="error-message-container" style="color: black;" role="alert"><%=message%></div>
      
            </div>
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_name">PRODUCT NAME</label>
            <div class="col-md-4">
              <input id="productName" name="productName" value="<%=product.productName%>" class="form-control input-md"
                 type="text">
    
            </div>
          </div>
    

          <div class="form-group">
            <label class="col-md-4 control-label" for="product_categorie">PRODUCT CATEGORY</label>
            <div class="col-md-4">
                <select id="product_categorie" name="productCategory" class="form-control">
                  <% categories.forEach(category => { %>
                    <option  value="<%= category._id %>" <%= product.productCategory.toString() === category._id.toString() ? 'selected' : '' %>>
                        <%= category.categoryName %>
                    </option>
                <% }); %>
                </select>
            </div>
        </div>
    
          
    
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_name">PUBLISHER</label>
            <div class="col-md-4">
              <input id="publisher_name" name="publisher" placeholder="PUBLISHER" class="form-control input-md"
                 type="text" value="<%=product.publisher%>" required>
    
            </div>
          </div>
    
          <div class="form-group row">
            <label class="col-md-4 control-label" for="product_name">SIZE</label>
            <div class="col-md-4">
                <input id="product_size" name="size" placeholder="SIZE" class="form-control input-md" type="text" oninput="convertSize()" value="<%=product.size%>">
            </div>
            <div class="col-md-1">
                <select name="sizeUnit" id="sizeUnit" class="form-control size" onchange="convertSize()">
                    <option value="MB">MB</option>
                    <option value="GB">GB</option>
                </select>
            </div>
            <input type="hidden" name="convertedSize" id="convertedSize" value="">
        </div>
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="available_quantity">TOTAL QUANTITY</label>
            <div class="col-md-4">
              <input id="toal_quantity" name="totalQuantity" placeholder="TOTAL QUANTITY"
                class="form-control input-md" type="text" value="<%=product.totalQuantity%>" required>
    
            </div>
          </div>
    
          <!-- Textarea -->
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_description">PRODUCT DESCRIPTION</label>
            <div class="col-md-4">
              <textarea class="form-control" id="product_description" name="description" required><%= product.description %></textarea>
            </div>
          </div>
    
    
    
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="online_date">RELEASED DATE</label>
            <div class="col-md-4">
              <input id="released_date" name="releasedDate" placeholder="RELEASED DATE" class="form-control input-md" 
                type="date" value="<%=formattedReleasedDate%>">
    
            </div>
          </div>
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="online_date">PRICE</label>
            <div class="col-md-4">
              <input id="product_price" name="price" placeholder="PRICE" class="form-control input-md"
                type="text" value="<%=product.price%>" required>
    
            </div>
          </div>
          <input type="hidden" id="existingImageData" name="existingImage" value="<%= product.image[0] %>">

              
          <div class="form-group">
            <label class="col-md-4 control-label">Image</label>
            <input
            class="input-file"
                type="file"
                name="gameImage"
                id="imageInput"
            />
            <img id="imagePreview" style="max-width: 100%" />
            <div id="errorImage" style="color: red;"></div>
        
            <% if (product.image && product.image[0]) { %>
                <p>Current Image:</p>
                <img src="<%= product.image[0] %>" style="max-width: 100%; height: 150px;"  />
                <!-- Add a hidden input to store the existing image path -->
                <input type="hidden" name="existingImage1" value="<%= product.image[0] %>" />
            <% } %>
        </div>
        
        <div class="form-group">
            <label class="col-md-4 control-label">Auxiliary Image</label>
            <input
            class="input-file"
                type="file"
                name="gameImage2"
                id="imageInput2"
            />
            <img id="imagePreview2" style="max-width: 100%" />
            <div id="errorImage" style="color: red;"></div>
        
            <% if (product.image && product.image[1]) { %>
                <p>Current Auxiliary Image:</p>
                <img src="<%= product.image[1] %>" style="max-width: 100%; height: 150px;" />
                <!-- Add a hidden input to store the existing auxiliary image path -->
                <input type="hidden" name="existingImage2" value="<%= product.image[1] %>" />
            <% } %>
        </div>
        
          
              <!-- File Button -->

            
    
              <!-- Button -->
              <div class="form-group">
                <label class="col-md-4 control-label" for="filebutton"></label>
                <div class="col-md-4">
                  <button id="singlebutton" type="submit" name="SUBMIT" class="btn btn-primary">SUBMIT</button>
                </div>
              </div>
    
        </fieldset>
      </form>
      
      <script>
        // Function to validate the form
  function validateForm() {
    var productName = document.getElementById('productName').value.trim();
    var productCategory = document.getElementById('product_categorie').value;
    var publisher = document.getElementById('publisher_name').value.trim();
    var size = document.getElementById('product_size').value.trim();
    var totalQuantity = document.getElementById('toal_quantity').value;
    var description = document.getElementById('product_description').value.trim();
    var releasedDate = document.getElementById('released_date').value;
    var price = document.getElementById('product_price').value;
    var imageUploader = document.getElementById('imageInput')
    document.getElementById('error-message-container').innerHTML = '';


    if (productName === '' || productCategory === '' || publisher === '' || size === '' || description === '' || releasedDate === '' || imageUploader === '') {
      displayErrorMessage('Please fill out all fields');
      return false;
    }
    if (isNaN(totalQuantity) || totalQuantity < 0) {
  displayErrorMessage('Total Quantity must be a non-negative number');
  return false;
}

if (isNaN(price) || price < 0) {
  displayErrorMessage('Price must be a non-negative number');
  return false;
}
    if (price < 0){
      displayErrorMessage('Price must be a non negative number');
      return false;
    }
    if (totalQuantity < 0) {
      displayErrorMessage('quantity must be a non negative number');
      return false;
    }
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.webp)$/i;
        if (imageUploader.files.length) {
    var fileName = imageUploader.files[0].name;

    // Check against the regular expression (case-insensitive)
    if (!allowedExtensions.test(fileName.toLowerCase())) {
        displayErrorMessage("Invalid file type. Please upload a valid image file.");
        return false;
    }}
// } else {
//     displayErrorMessage('Please select an image file');
//     return false;
// }
    return true;
  }

  // Function to display error messages
  function displayErrorMessage(message) {
    var errorMessageContainer = document.getElementById('error-message-container');
    var errorMessage = document.createElement('div');
    errorMessage.className = 'alert alert-danger text-center';
    errorMessage.innerHTML = message;
    errorMessageContainer.appendChild(errorMessage);
  }
  const hiddenImageInput = document.getElementById('hidden_image');
    const fileInput = document.getElementById('image_uploader');
    
    // Check if there is a value in the hidden input
    if (hiddenImageInput.value) {
        // Set the value of the file input
        fileInput.value = hiddenImageInput.value;
    }

    function convertSize() {
    // Get the input element, size unit element, and the hidden input for converted size
    var inputElement = document.getElementById('product_size');
    var sizeUnitElement = document.getElementById('sizeUnit');
    var convertedSizeElement = document.getElementById('convertedSize');
    
    // Parse the input value as a number
    var sizeValue = parseFloat(inputElement.value);

    // If the input is a valid number
    if (!isNaN(sizeValue)) {
        // Convert the size based on the selected unit
        var convertedSize = sizeUnitElement.value === 'MB' ? sizeValue / 1024 : sizeValue;
        convertedSize = convertedSize.toFixed(2);
        // Update the hidden input value with the converted size
        convertedSizeElement.value = convertedSize;
    }

}

      </script>
</body>
</html>