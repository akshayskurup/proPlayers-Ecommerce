<%-include("adminHeader.ejs")%>
    <form class="form-horizontal mx-auto" style="margin-top: 60px; margin-left: 50px;" method="post" action="/product-management/edit/<%=productId%>" onsubmit="return validateForm()" enctype="multipart/form-data" id="edit-products">
        <fieldset>
    
          <!-- Form Name -->
          <center>
            <legend>Product Management</legend>
          </center>
    
          <div class="row">
            <div class="col-md-6 col-md-offset-3">
              <div class="alert alert-info text-center" id="error-message-container" style="color: black;" role="alert"><%=message%></div>
      
            </div>
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_name">PRODUCT NAME</label>
            <div class="col-md-4">
              <input id="productName" name="productName" value="<%=product.productName%>" class="form-control input-md"
                 type="text">
    
            </div>
          </div>
    

          <div class="form-group">
            <label class="col-md-4 control-label" for="product_categorie">PRODUCT CATEGORY</label>
            <div class="col-md-4">
                <select id="product_categorie" name="productCategory" class="form-control" onchange="toggleGenreDropdown()">
                  <% categories.forEach(category => { %>
                    <option  value="<%= category._id %>" <%= product.productCategory === category._id ? 'selected' : '' %>>
                        <%= category.categoryName %>
                    </option>
                <% }); %>
                </select>
            </div>
        </div>

        <div class="form-group" id="genre">
          <label class="col-md-4 control-label" for="product_name">Genre</label>
          <div class="col-md-4">
            <select id="product_genre" name="productGenre" class="form-control">
                  <option value="Action"<%= product.productGenre === "Action" ? 'selected' : '' %>>Action</option>
                  <option value="Adventure"<%= product.productGenre === "Adventure" ? 'selected' : '' %>>Adventure</option>
                  <option value="Fighting"<%= product.productGenre === "Fighting" ? 'selected' : '' %>>Fighting</option>
                  <option value="Racing"<%= product.productGenre === "Racing" ? 'selected' : '' %>>Racing</option>        
          </select>
    
          </div>
        </div>
    
          
    
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_name">PUBLISHER</label>
            <div class="col-md-4">
              <input id="publisher_name" name="publisher" placeholder="PUBLISHER" class="form-control input-md"
                 type="text" value="<%=product.publisher%>" required>
    
            </div>
          </div>
    
          <div class="form-group row">
            <label class="col-md-4 control-label" for="product_name">SIZE</label>
            <div class="col-md-4">
                <input id="product_size" name="size" placeholder="SIZE" class="form-control input-md" type="text" oninput="convertSize()" value="<%=product.size%>">
            </div>
            <div class="col-md-1">
                <select name="sizeUnit" id="sizeUnit" class="form-control size" onchange="convertSize()">
                    <option value="MB">MB</option>
                    <option value="GB">GB</option>
                </select>
            </div>
            <input type="hidden" name="convertedSize" id="convertedSize" value="<%=product.size%>">
        </div>
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="available_quantity">TOTAL QUANTITY</label>
            <div class="col-md-4">
              <input id="toal_quantity" name="totalQuantity" placeholder="TOTAL QUANTITY"
                class="form-control input-md" type="text" value="<%=product.totalQuantity%>" required>
    
            </div>
          </div>
    
          <!-- Textarea -->
          <div class="form-group">
            <label class="col-md-4 control-label" for="product_description">PRODUCT DESCRIPTION</label>
            <div class="col-md-4">
              <textarea class="form-control" id="product_description" name="description" required><%= product.description %></textarea>
            </div>
          </div>
    
    
    
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="online_date">RELEASED DATE</label>
            <div class="col-md-4">
              <input id="released_date" name="releasedDate" placeholder="RELEASED DATE" class="form-control input-md" 
                type="date" value="<%=formattedReleasedDate%>">
    
            </div>
          </div>
    
          <!-- Text input-->
          <div class="form-group">
            <label class="col-md-4 control-label" for="online_date">PRICE</label>
            <div class="col-md-4">
              <input id="product_price" name="price" placeholder="PRICE" class="form-control input-md"
                type="text" value="<%=product.price%>" required>
    
            </div>
          </div>
          <input type="hidden" id="existingImageData" name="existingImage" value="">

              
           <!-- Image 1 -->
<div class="form-group">
  <label class="col-md-4 control-label">Image 1</label>
  <input type="hidden" name="imageIndex0" value="1" />
  <input class="input-file" type="file" name="gameImages1" id="imageInput1" onchange="previewImage(this, 0)"/>
  <img id="imagePreview0" src="<%= product.image[0]%>" style="width: 200px; height: 150px;"/>
  <button type="button" onclick="removeImage(0)">Remove this image</button>
  <div id="errorImage" style="color: red;"></div>
</div>

<!-- Image 2 -->
<div class="form-group">
  <label class="col-md-4 control-label">Image 2</label>
  <input type="hidden" name="imageIndex1" value="2" />
  <input class="input-file" type="file" name="gameImages2" id="imageInput2" onchange="previewImage(this, 1)"/>
  <img id="imagePreview1" src="<%= product.image[1]%>" style="width: 200px; height: 150px;"/>
  <button type="button" onclick="removeImage(1)">Remove this image</button>
  <div id="errorImage" style="color: red;"></div>
</div>

<!-- Image 3 -->
<div class="form-group">
  <label class="col-md-4 control-label">Image 3</label>
  <input type="hidden" name="imageIndex2" value="3" />
  <input class="input-file" type="file" name="gameImages3" id="imageInput3" value="<%=product.image[2]%>" onchange="previewImage(this, 2)"/>
  <img id="imagePreview2" src="<%= product.image[2]%>" style="width: 200px; height: 150px;"/>
  <button type="button" onclick="removeImage(2)">Remove this image</button>
  <div id="errorImage" style="color: red;"></div>
</div>

<!-- Image 4 -->
<div class="form-group">
  <label class="col-md-4 control-label">Image 4</label>
  <input type="hidden" name="imageIndex3" value="4" />
  <input class="input-file" type="file" name="gameImages4" id="imageInput4" value="<%=product.image[3]%>" onchange="previewImage(this, 3)"/>
  <img id="imagePreview3" src="<%= product.image[3]%>" style="width: 200px; height: 150px;"/>
  <button type="button" onclick="removeImage(3)">Remove this image</button>
  <div id="errorImage" style="color: red;"></div>
</div>

<input type="text" name="productId" id="productId" value="<%=product._id%>" placeholder="<%=product._id%>">

          
          
        
          
              <!-- File Button -->

            
    
              <!-- Button -->
              <div class="form-group">
                <label class="col-md-4 control-label" for="filebutton"></label>
                <div class="col-md-4">
                  <button id="singlebutton" type="submit" name="SUBMIT" class="btn btn-primary">SUBMIT</button>
                </div>
              </div>
    
        </fieldset>
      </form>
      
      <script>
        // Function to validate the form
  function validateForm() {
    var productName = document.getElementById('productName').value.trim();
    var productCategory = document.getElementById('product_categorie').value;
    var publisher = document.getElementById('publisher_name').value.trim();
    var size = document.getElementById('product_size').value.trim();
    var totalQuantity = document.getElementById('toal_quantity').value;
    var description = document.getElementById('product_description').value.trim();
    var releasedDate = document.getElementById('released_date').value;
    var price = document.getElementById('product_price').value;
    var imageUploader = document.getElementById('imageInput')
    document.getElementById('error-message-container').innerHTML = '';


    if (productName === '' || productCategory === '' || publisher === '' || size === '' || description === '' || releasedDate === '' || imageUploader === '') {
      displayErrorMessage('Please fill out all fields');
      return false;
    }
    if (isNaN(totalQuantity) || totalQuantity < 0) {
  displayErrorMessage('Total Quantity must be a non-negative number');
  return false;
}

if (isNaN(price) || price < 0) {
  displayErrorMessage('Price must be a non-negative number');
  return false;
}
    if (price < 0){
      displayErrorMessage('Price must be a non negative number');
      return false;
    }
    if (totalQuantity < 0) {
      displayErrorMessage('quantity must be a non negative number');
      return false;
    }
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.webp)$/i;
        if (imageUploader.files.length) {
    var fileName = imageUploader.files[0].name;

    // Check against the regular expression (case-insensitive)
    if (!allowedExtensions.test(fileName.toLowerCase())) {
        displayErrorMessage("Invalid file type. Please upload a valid image file.");
        return false;
    }}
// } else {
//     displayErrorMessage('Please select an image file');
//     return false;
// }
    return true;
  }

  // Function to display error messages
  function displayErrorMessage(message) {
    var errorMessageContainer = document.getElementById('error-message-container');
    var errorMessage = document.createElement('div');
    errorMessage.className = 'alert alert-danger text-center';
    errorMessage.innerHTML = message;
    errorMessageContainer.appendChild(errorMessage);
  }
  const hiddenImageInput = document.getElementById('hidden_image');
    const fileInput = document.getElementById('image_uploader');
    
    // Check if there is a value in the hidden input
    if (hiddenImageInput.value) {
        // Set the value of the file input
        fileInput.value = hiddenImageInput.value;
    }

    function convertSize() {
    // Get the input element, size unit element, and the hidden input for converted size
    var inputElement = document.getElementById('product_size');
    var sizeUnitElement = document.getElementById('sizeUnit');
    var convertedSizeElement = document.getElementById('convertedSize');
    
    // Parse the input value as a number
    var sizeValue = parseFloat(inputElement.value);

    // If the input is a valid number
    if (!isNaN(sizeValue)) {
        // Convert the size based on the selected unit
        var convertedSize = sizeUnitElement.value === 'MB' ? sizeValue / 1024 : sizeValue;
        convertedSize = convertedSize.toFixed(2);
        // Update the hidden input value with the converted size
        convertedSizeElement.value = convertedSize;
    }

}
document.addEventListener('DOMContentLoaded', function () {
    var form = document.getElementById('edit-products');

    if (form) {
        form.addEventListener('submit', function (e) {
            e.preventDefault();

            Swal.fire({
                icon: 'success',
                title: 'Product Updated',
                text: 'The product has been successfully updated.',
            }).then((result) => {
                if (result.isConfirmed) {
                    // If the user clicks 'OK', submit the form
                    form.submit();
                }
            });
        });
    }
});



// document.getElementById('imageInput1').addEventListener('change', function () {
//   // Update the hidden input value with the correct index
//   document.getElementById('imageIndex0').value = 0;
// });

// document.getElementById('imageInput2').addEventListener('change', function () {
//   document.getElementById('imageIndex1').value = 1;
// });

// document.getElementById('imageInput3').addEventListener('change', function () {
//   document.getElementById('imageIndex2').value = 2;
// });

// document.getElementById('imageInput4').addEventListener('change', function () {
//   document.getElementById('imageIndex3').value = 3;
// });


document.addEventListener('DOMContentLoaded', function () {
  const fileInputs = document.querySelectorAll('.input-file');

  fileInputs.forEach(function (fileInput, index) {
    fileInput.addEventListener('change', function () {
      const hiddenIndexInput = document.getElementById(`imageIndex${index}`);
      hiddenIndexInput.value = index;
    });
  });
});
async function removeImage(imageIndex) {
  const imageInputId = `#imageInput${imageIndex+1}`;
  const imagePreviewId = `#imagePreview${imageIndex}`;

  console.log('Attempting to remove image with IDs:', imageInputId, imagePreviewId);

  const imageInput = document.querySelector(imageInputId);
  if (imageInput) {
    imageInput.value = '';
  } else {
    console.error(`Image input not found: ${imageInputId}`);
  }

  const imagePreview = document.querySelector(imagePreviewId);
  if (imagePreview) {
    imagePreview.src = '';
  } else {
    console.error(`Image preview not found: ${imagePreviewId}`);
  }

  const productId = document.getElementById('productId').value;
  const productImagePath = `product.image[${imageIndex}]`;
  const productImagePathInput = document.querySelector(`input[name="${productImagePath}"]`);
  
  if (productImagePathInput) {
    productImagePathInput.value = '';
    console.log('Updated form data:', new FormData(document.getElementById('yourFormId')));
  } else {
    console.error(`Product image path input not found: ${productImagePath}`);
  }

  const formInputId = `#gameImages${imageIndex + 1}`;
  const formInput = document.querySelector(formInputId);
  if (formInput) {
    formInput.value = '';
  } else {
    console.error(`Form input not found: ${formInputId}`);
  }


  try {
    const response = await fetch('/remove-image', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ imageIndexToRemove: imageIndex, productId: productId }),
    });

    if (response.ok) {
      const data = await response.json();
      console.log(data.message);
    } else {
      const errorData = await response.json();
      console.error('Error removing image:', errorData.error);
    }
  } catch (error) {
    console.error('Error removing image:', error);
  }
}

  function previewImage(input, index) {
    var previewElement = document.getElementById("imagePreview" + index);
    var errorElement = document.getElementById("errorImage" + index);

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        previewElement.src = e.target.result;
        errorElement.innerHTML = ""; // Clear error message
      };

      reader.readAsDataURL(input.files[0]);
    } else {
      previewElement.src = ""; // Clear preview if no file selected
      errorElement.innerHTML = "No image selected";
    }
  }

  function toggleGenreDropdown() {
        var categoryDropdown = document.getElementById('product_categorie');
        var genreDropdown = document.getElementById('genre');

        // Check if the selected option in the category dropdown is "GAMES"
        var selectedCategory = categoryDropdown.options[categoryDropdown.selectedIndex].text;

        // Show or hide the genre dropdown based on the selected category
        if (selectedCategory === 'GAMES') {
            genreDropdown.style.display = 'block';
        } else {
            genreDropdown.style.display = 'none';
        }
    }

      </script>
<%-include('adminFooter.ejs')%>