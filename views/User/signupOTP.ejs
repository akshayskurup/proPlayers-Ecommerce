<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/x-icon" href="/homeimgs/pngegg.png">
    <title>OTP Verification</title>
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css'>
    <link rel="stylesheet" href="/css/signupOTP.css">
    <style>
      body {
          background-image: url('/homeimgs/loginimgs.jpg'); /* Replace with your image path */
          background-size: cover;
          background-position: center;
          height: 90vh;
          margin: 0;
          display: flex;
          align-items: center;
          justify-content: center;
          overflow: hidden;
          
      }
      body::before {
          content: '';
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          background: rgba(0, 0, 0, 0.5); /* Adjust the alpha value for the overlay darkness */
      }
  
  
      .container {
          background-color: rgba(255, 255, 255, 0);
          border-radius: 10px;
          padding: 20px;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
          position: relative;
          z-index: 1;
      }
  
      .navbar {
          background-color: #dc354600; /* Bootstrap red color */
          
      }
      h4, p{
        color: rgba(240, 248, 255, 0.671);
      }
      .btn{
        border: 2px solid #ff9d35;
      }
      .btn:hover{
        background: #ff9d35;
        
      }
  </style>
</head>
<body>
    <section class="container d-block">
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px;">
              <div class="card mb-5 mt-5 border-0" style=" background: #dc354600;">
                <div class="card-body p-5 text-center">
                  <h4>Verify</h4>
                  <p>Verification Code has been sent to your website</p>
                  <div id="message" class="bg-danger"><%= message %></div>
                  <p id="countdown-timer" class="text-muted mb-0"></p>
                  <form id="otpForm" action="/signup-otp" method="post">
                    <div class="otp-field mb-4">
                      <label for="enteredOTP">Enter OTP:</label>
                      <input id="enteredOTP" style="width: 300px;" type="number" name="enteredOTP" required />
                      <input type="hidden" id="email" name="email" value="<%= email %>">
                    </div>
      
                    <button class="btn  mb-3" type="submit">Verify</button>
                  </form>
                  
                  
                  <form method="post" action="/resendOtp">
                    <p class="resend text-muted mb-0">
                      Didn't receive code? <a id="resendLink" onclick="resendOTP()">Request again</a>
                    </p>
                  </form>
                  
                </div>
              </div>
            </div>
          </div>
      </section>

<script>

document.getElementById('otpForm').addEventListener('submit', function (event) {
    event.preventDefault(); 

    handleFormSubmit();
  });

  function handleFormSubmit() {
    const enteredOTP = document.getElementById('enteredOTP').value;
    const email = document.getElementById('email').value;

    fetch(`/signup-otp?email=${encodeURIComponent(email)}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ enteredOTP }),
    })
      .then(response => response.json())
      .then(data => {
        if (!data.success) {
          console.error('OTP verification failed:', data.message);
          document.getElementById('message').innerText = 'Incorrect OTP. Please try again.';
        } else {
          countdown = 50;
          startCountdown();
          window.location.href = '/home';
        }
      })
      .catch(error => {
        console.error('Error during OTP verification:', error);
        document.getElementById('message').innerText = 'Error during OTP verification. Please try again.';
      });
  }










  let countdown = 50; // Resend cooldown in seconds
  let timer;
  let isResendInProgress = false;

  function updateCountdown() {
    const countdownTimer = document.getElementById('countdown-timer');
    const resendLink = document.getElementById('resendLink');

    if (countdown > 0) {
      countdownTimer.textContent = `Resend OTP in ${countdown}s`;
      countdown--;
    } else {
      countdownTimer.textContent = '';
      // Enable and show the "Request again" link after the countdown reaches 0
      resendLink.classList.remove('disabled');
      resendLink.style.display = 'inline'; // Show the link
      clearInterval(timer);
    }
  }

  function startCountdown() {
    // Clear the existing timer if it exists
    clearInterval(timer);

    // Start a new timer
    timer = setInterval(updateCountdown, 1000);
    updateCountdown(); // Initial update
  }

  // Initialize the countdown
  startCountdown();

  // Hide the "Request again" link initially
  document.getElementById('resendLink').style.display = 'none';

  // Function to handle OTP resend button click
  function resendOTP() {
    const resendLink = document.getElementById('resendLink');

    // Check if the resend action is already in progress
    if (isResendInProgress) {
      console.log('Resend already in progress.');
      return;
    }

    // Disable the "Request again" link and start the countdown timer
    resendLink.textContent = 'Re';
    resendLink.classList.add('disabled');
    resendLink.style.display = 'none'; // Hide the link

    // Set the resend action as in progress
    isResendInProgress = true;

    // Make an AJAX request to the server to resend OTP
    fetch('/resendOtp', { method: 'POST' })
      .then(response => response.json())
      .then(data => {
        // Check if the resend was successful
        if (!data.success) {
          // Handle the case where the resend failed
          console.error('Resend failed:', data.message);
          // Reset the countdown timer if the resend fails
          countdown = 0;
        } else {
          // Reset the countdown timer after successful resend
          countdown = 50;
          startCountdown();
        }
      })
      .catch(error => {
        console.error('Error during resend:', error);
        // Reset the countdown timer if there's an error during resend
        countdown = 0;
      })
      .finally(() => {
        // Set the resend action as complete
        isResendInProgress = false;
      });
  }

  // Attach the click event listener to the "Request again" link
  document.getElementById('resendLink').addEventListener('click', function () {
    if (!document.getElementById('resendLink').classList.contains('disabled')) {
      // Perform the action when the link is not disabled (after 50 seconds)
      console.log('Request again clicked');
      // Add your logic to trigger the resend action or show the form again
    }
  });
</script>






</body>
</html>
